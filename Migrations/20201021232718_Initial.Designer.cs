// <auto-generated />
using HealthEquity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthEquity.Migrations
{
    [DbContext(typeof(HealthEquityDbContext))]
    [Migration("20201021232718_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthEquity.Data.Entity.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            Email = "GeorgeC@Yahoo.com",
                            FirstName = "George",
                            LastName = "Clooney",
                            PhoneNumber = "801-444-5555"
                        },
                        new
                        {
                            MemberId = 2,
                            Email = "RobertR@Yahoo.com",
                            FirstName = "Robert",
                            LastName = "Redford",
                            PhoneNumber = "801-333-5655"
                        },
                        new
                        {
                            MemberId = 3,
                            Email = "AlbertE@Yahoo.com",
                            FirstName = "Albert",
                            LastName = "Einstein",
                            PhoneNumber = "801-663-5655"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
